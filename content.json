{"pages":[{"title":"All tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Firefox Developer Edition 更换界面语言为中文","text":"在Firefox英文官网下载Firefox Developer Edition。下载安装完是英文界面的。后来觉得不方便就想将其设置为中文。于是，参考Firefox官方更换语言指引进行设置，但是仍然无法更改语言。 遂到网上搜索解决方案，发现基本都是建议下载中文版本然后重新安装。虽然感觉这个方法能行，但是我相信应该还有其他更加“温和”方法。于是就继续查找有没有其他解决方案。终于在Mozilla Support Forum找到一个提问How to change the interface to different language?下面的回复： You need to modify/create a string pref on the about:config page like written in the knowledge base article intl.locale.requested = “ja”(without the quotes) You can open the about:config page via the location/address bar. You can accept the warning and click “I accept the risk!” to continue. 按照这个方法，终于成功更换语言。 在地址栏输入 about:config 进入页面 点击 “I accept the risk!” 在页面里的搜索框输入 intl.locale.requested 选择 string 然后点击右侧的加号 输入zh-cn，然后确定。（同理还能设置为任意其他语言） 重启浏览器后语言就切换为中文了。","link":"/2020/03/FirefoxDevChangeLanguage/"},{"title":"利用 SMB 和树莓派打造家庭 NAS","text":"把移动硬盘挂载在树莓派上用 SMB 共享有一段时间了，利用树莓派作为中继在笔记本电脑和台式电脑之间传输数据非常方便。单个大文件传输速率在 35MB/s 到 50MB/s 之间，用电脑或手机播放硬盘里的视频完全没有压力，拖动进度条也不会出现卡顿的现象。今天就将如何利用树莓派打造为“简易 NAS”经验分享给大家。 配置的关键： 树莓派自动挂载硬盘 部署配置 samba 本文分享的是笔者本人部署经验，仅作参考，并不适用所有人的情况。如果文章内容有误，请留言指正！ 配置树莓派 笔者树莓派的系统信息： 123Raspberrypi4b 4gbOS: Ubuntu 20.04 focalKernel: aarch64 Linux 5.4.0-1008-raspi 挂载移动硬盘ntfs-3g因为在 linux 内核所包含的 NTFS 驱动程序仅提供读取操作（包括列出文件清单、开启、复制文件），而缺少写入操作（包括创建文件，对文件的修改、更名、移动和删除）的支持。如果你的硬盘是 ntfs 文件系统，那么就需要使用ntfs-3g来挂载硬盘。如果你的硬盘是其他文件格式，请忽略此步骤。 1sudo apt update &amp; sudo apt install ntfs-3g 开机自动挂载 查看分区信息 1sudo fdisk -l //找到要挂载的硬盘并记住对应信息 创建挂载目录 1mkdir -p /media/WULU-HHD 修改/etc/fstab 将下面的 /dev/sda1 替换为你的硬盘，/media/Wulu-HHD 替换为你要挂载硬盘的路径。（适用于 NFTS 文件格式的硬盘，如果硬盘为其他格式需要适当调整） /etc/fstab1/dev/sda1 /media/Wulu-HHD ntfs-3g defaults,uid=1000,gid=1000,dmask=022,fmask=133 0 0 配置 SMB 安装 samba 1sudo sudo apt install samba 设置 smb 用户密码 将ubuntu替换为你的用户名，此密码用于登录 smb。 1sudo smbpasswd -a ubuntu 修改 smb 配置文件 1sudo nano /etc/samba/smb.conf 将下面 /media/Wulu-HHD 替换为你要共享的文件夹路径 /etc/samba/smb.conf123456789101112[share]comment = share folderbrowseable = yespath = /media/Wulu-HHDcreate mask = 0700directory mask = 0700valid users = ubuntuforce user = ubuntuforce group = ubuntupublic = yesavailable = yeswritable = yes 重启 samba服务 1sudo systemctl restart smbd 连接 SMB 服务器 Windows 临时使用：win+R 打开 运行 输入 \\\\ip\\path （例如\\\\192.168.1.100\\share） 长期使用：在文件管理器打开 此电脑 在空白处点击鼠标右键选择 添加一个网络位置 输入 \\\\ip\\path （例子同上）按照提示完成剩余步骤。最好提前给树莓派分配静态 IP。 Linux Samba 客户端配置 在各文件管理器配置（GNOME Files 和 KDE 等） Android 文件管理器：ES 文件管理器等 媒体播放器：MX Player 和 VLC 等","link":"/2020/10/RaspberrypiSMB/"},{"title":"Macbook air 2018 catalina 重装记录","text":"备份数据后开始重装： Command-R 进入实用工具 项目列表连接WiFi 第一次尝试（未能创建用于APFS安装的预启动宗卷） 没有使用磁盘工具抹除磁盘 直接选择了重新安装MacOS 出现“未能创建用于APFS安装的预启动宗卷”错误 第二次尝试（-1008f） 使用磁盘工具抹除了硬盘，格式都为APFS 选择重新安装MacOS，但是出现了两个一样的硬盘（macintochHD 和 macintochHD - 数据） 出现 -1008f 错误 第n次尝试 （-1008f） 第一次尝试后，开机已然无法进入实用工具 尝试Command-R 开机，等待后仍显示1008f错误 尝试Shift-Option-Command-R 开机，从互联网重新安装您电脑原始版本的 macOS，等待后仍然显示1008f错误 尝试Option-Command-R 开机，从互联网安装最新版本的 macOS，等待后进入了实用工具界面。重启后仍然无法开机，算是又回到原点。参考：重新安装 macOS 最终尝试 （成功）经过大量查阅查阅资料，在最后一次安装终于重装成功。以下步骤不保证每一个步骤都与成功安装的结果关联。 从“查找我的设备”中移除了该mac设备。 尝试Option-Command-R 开机，从互联网安装最新版本的 macOS，等待后进入了实用工具界面。 进入实用工具界面，抹除磁盘，有两个一样的磁盘（macintochHD 和 macintochHD - 数据）移除后者，选中“macintochHD - 数据”，然后点击上方减号。 打开终端输入date查看时间，发现时间不对，使用date命令修改时间至准确。 在终端中 删除某个文件，具体是什么已忘记… 然后 ，选择“重新安装Mac os” 进入安装引导界面后，提示安装助理“内存不足”还是什么，重启之后就能正常开机了。","link":"/2020/02/ReinstallCatalina/"},{"title":"将免费开源看板软件Wekan部署到树莓派4B","text":"上篇文章讲了如何利用Docker将Wekan部署在服务器上以及一些Wekan的基本操作。（如果你还不知道Wekan是啥，请看：链接）同时，也提到了在Wekan的官方文档里，无论是用Docker还是Snap部署Wekan，如果安全问题是很重要的，都不建议将Wekan暴露到外网（与内网相对）上。不想让服务器变成肉鸡或者暴露在危险下，正好Wekan也支持部署在树莓派上。那么，开始吧。 本文将分三部分： 在树莓派上部署Wekan 导出Wekan数据（从docker） 导入Wekan数据（到树莓派） 在树莓派上安装Wekan参考链接：install-wekan-to-raspi3-raspi4-or-any-arm64-server 系统需求123456READMECurrently uses Node v12.16.2 and MongoDB v3.x or v4.xBuilt on Ubuntu 19.10 64bit arm64 on RasPi4.Should work on RasPi3 and RasPi4 on Ubuntu 19.10 64bit arm64.Install info here:https://github.com/wekan/wekan/wiki/Raspberry-Pi 简单地说，需要装ubuntu64位的系统 笔者树莓派的配置： 123Raspberrypi4b 4gbOS: Ubuntu 20.04 focalKernel: aarch64 Linux 5.4.0-1008-raspi 安装过程下载和安装wekan所需要的用浏览器打开： https://releases.wekan.team/raspi3/ 查看README.txt文件如： README.txt123456READMECurrently uses Node v12.16.2 and MongoDB v3.x or v4.xBuilt on Ubuntu 19.10 64bit arm64 on RasPi4.Should work on RasPi3 and RasPi4 on Ubuntu 19.10 64bit arm64.Install info here:https://github.com/wekan/wekan/wiki/Raspberry-Pi 安装下列软件： 12sudo apt-get updatesudo apt-get install npm mongodb-server mongodb-clients mongo-tools zip unzip 官方文档写的是： 1sudo apt-get install npm mongodb-server mongodb-clients mongodb-tools zip unzip 但是笔者在实际安装过程中提示E: Unable to locate package mongodb-tools，经过笔者的搜索（不一定对）觉得应该是mongodb-tools于是就做了替换，在后续的安装过程中也没有出现问题。 于是笔者用蹩脚的英语提了一个issue，目前正在等待回应。 接下来： 12sudo npm -g install npmsudo npm -g install n 在前文提到的README.txt文件查看Node版本，然后安装。比如此时，Node 的版本是12.16.2： 1sudo n 12.16.2 接下来切换到你想储存wekan的目录，比如笔者习惯放在repo/xxx目录下： 1cd ~/repo/wekan 查看上文让你打开的网站，下载Wekan（名字类似wekan-x.xx-arm64.zip），可以鼠标右键点击然后选择复制链接，比如笔者安装时是wekan-4.01-arm64.zip： ~/repo/wekan1wget https://releases.wekan.team/raspi3/wekan-4.01-arm64.zip 接下来下载最新的start-wekan.sh: ~/repo/wekan1wget https://raw.githubusercontent.com/wekan/wekan/master/start-wekan.sh 解压之前下载wekan压缩包： ~/repo/wekan1unzip wekan-4.01-arm64.zip 解压完成后，你的wekan目录应如： ~/repo/wekan1bundle start-wekan.sh wekan-4.01-arm64.zip 以服务的方式运行wekan如果你想以非root用户将node运行在80端口： 首先，查看node的安装位置： 1which node 赋予权限，比如笔者上一步得到的结果是/usr/local/bin/node： 1sudo setcap cap_net_bind_service=+ep /usr/local/bin/node 编辑/etc/systemd/system/wekan.service: 1sudo nano /etc/systemd/system/wekan.service 添加下列内容：（注意WorkingDirectory后面的值应为前面解压的wekan-4.01-arm64.zip得到的bundle目录，比如/home/ubuntu/repo/wekan/bundle） /etc/systemd/system/wekan.service123456789101112131415[Unit]Description=The Wekan ServiceAfter=syslog.target network.target[Service]EnvironmentFile=/etc/default/wekanUser=ubuntuGroup=ubuntuWorkingDirectory=/home/ubuntu/repo/wekan/bundleExecStart=/usr/local/bin/node main.jsRestart=on-failureSuccessExitStatus=143[Install]WantedBy=multi-user.target 查看你树莓派的ip地址： 1ip address 记住你的ip地址形如192.168.x.x，下面呢以192.168.1.20为例子。 接下来编辑wekan的配置文件/etc/default/wekan，添加下列内容：（ROOT_URL改为树莓派的ip地址，为了更加方便，推荐在路由器上设置给你的树莓派分配固定ip） /etc/default/wekan12345NODE_ENV=productionWITH_API=trueMONGO_URL=mongodb://127.0.0.1:27017/wekanROOT_URL=http://192.168.1.20PORT=80 启动wekan： 1sudo systemctl start wekan 设置开机自启： 1sudo systemctl enable wekan 查看wekan运行状况： 1sudo systemctl status wekan 打开浏览器访问之前设设置的ROOT_URL（比如笔者设置的是http://192.168.1.20）看到登陆界面就大功告成了。第一个注册的为管理员账户。如果你想知道更多的wekan操作，可以查看上一篇文章：免费开源看板软件Wekan安装与使用记录。 如果你还需要还原wekan数据，请不要着急，继续往下看。 导出Wekan数据（从docker）本文将介绍如何从docker导出wekan的数据，参考Export-Docker-Mongo-Data。其他安装方式安装的wekan数据的备份和还原请参考 Wekan-Wiki-Backup。 停止运行wekan这一步十分重要！ 查看当前的docker进程： 1docker ps 然后你将看到wekan-app和wekan-db，关闭wekan-app 1docker stop wekan-app 再次查看当前的docker进程确保wekan-app已经停止运行： 1docker ps 导出数据进入mongo容器： 1docker exec -it wekan-db bash 切换到容器的根目录： 1cd / 将数据导出到容器内的目录下： 1mongodump -o /dump/ 退出容器： 1exit 将导出的数据保存当前目录： 1docker cp wekan-db:/dump . 导入数据停止本地运行wekan为了避免不可预计的问题，请先停止本地运行的wekan！ 1sudo systemctl stop wekan 导入数据从服务器上下载导出数据：(这里笔者用scp下载，你也可用其他方法，关于scp的用法可以参考：从Linux服务器下载文件到本地) 1scp -r user@youdomian.com:~/repo/wekan/dump /home/ubuntu/repo/wekan/ 将数据还原到wekan的数据库： 1mongorestore --drop --db wekan /home/ubuntu/repo/wekan/dump/wekan/ 重新打开wekan： 1sudo systemctl restart wekan 重新访问wekan，就可以直接用之前的账号登陆并且使用原来的看板了！","link":"/2020/05/Wekan2/"},{"title":"node-stream 基于Node.js 的本地直播应用（服务端和客户端）","text":"今天介绍一个开源项目node-stream，该项目由开发者waleedahmad开发，采用MIT协议在Github开源。 node-stream 利用Node.js实现了一个简易的本地直播平台。该项目支持从推流软件（OBS等）接收RTMP流并转码为HLS流在浏览器中播放。该项目分为服务端和客户端，服务端负责接收RTMP流和转码，客户端负责显示播放页面，同时该项目支持简单的帐号管理。 本文将讲述 node-stream 的部署和使用。对项目本身构建感兴趣的伙伴可以查看项目开发者 waleedahmad 写的文章 Building Live Streaming App with Node.js and React。 原版的node-stream的安装使用部署node-stream开发环境以 Ubuntu 为例 安装Node.js开发环境 安装 ffmpeg 1$ sudo apt install ffmpeg 安装 mongodb 注意！Ubuntu提供的 mongodb 包并非由MongoDB公司维护，并且与官方的 mongodb-org 包有冲突。如果您已经在Ubuntu系统上安装了 mongodb 包，那么在执行这些说明之前，必须先卸载 mongodb 包。否则可能会出现难以预计的问题，导致mongodb无法正常运行。 各操作系统mongodb官方安装教程：链接 配置和与运行node-stream 从github上下载 node-stream 源码 1$ git clone https://github.com/waleedahmad/node-stream 修改配置文件 1$ cd nodeStream &amp;&amp; nano ./server/config/default.js 几个重要配置说明： server.secret 为服务器密钥，用于加密会话，建议修改。 server.port 为网页客户端的端口。 rtmp_server.trans.ffmepg 为 ffmpeg 安装路径。Linux系统下，可以通过 which ffmpeg 获得，默认情况应该是与原始配置相同的，无需更改。Windows系统，则需要手动修改为 ffmepg 实际安装位置。 安装依赖，运行node-stream 12$ npm install $ npm run start node-stream/12$ npm install $ npm run start 访问网页端注册账户并获取串流密钥 访问http:127.0.0.1:3333 注册帐号： 注册完成后，进入 Go Live 页面，点击 Generate a new key 生成串流密钥。复制生成的串流密钥。 利用 OBS 直播串流 打开OBS &gt; 设置 &gt; 推流。服务器选项选择 自定义 ，服务器输入 rtmp://127.0.0.1:1935/live串流密钥为上一步骤生成的密钥。 接下就能在客户端首页看到直播列表，点击即可查看。 部署到树莓派上要将 node-stream 部署到树莓派上，只要在树莓派上安装arm版本的nodejs，再同样按照上面的步骤就可以啦。但是，由于原版的 node-stream 只支持在localhost访问，所以局域网内的其他设备访问就会出现问题。所以笔者fork后针对原版进行了修改，修改的版本：emuqi/node-stream，只要直接在配置文件里将ip_addr配置为树莓派在局域网的ip再运行直播服务就可以在局域网内访问node-stream了。其他更加详细的修改可以看下文。 针对node-stream进行改进在使用原版的 node-stream 的过程在，发现其存在一些问题。 不支持自定义ip，只能在localhost运行。 虽然 node-stream/server/config/default.js 也就是配置文件中提供了很多参数，但是修改部分配置后会出现很多问题。比如修改直播服务的端口后，直播列表的预览图就会加载失败等。 因此，笔者在原版的基础上做了一些改动和修复，感兴趣的朋友可以使用笔者修改过后的版本emuqi/node-stream。使用方法与原版基本相同，主要修改如下： 添加直播服务自定义ip功能 可在配置中直接修改ip_addr，即可自定义ip。 node-stream/server/config/default.js12345678const config = { server: { ip_addr: '127.0.0.1', secret: 'kjVkuti2xAyF3JGCzSZTk0YWM5JhI9mgQW4rytXc', port : 3333 }, ...} 修复更改直播服务端口会导致直播缩略图无法正常显示的Bug 更新项目readme","link":"/2020/11/node-stream/"},{"title":"免费开源看板软件Wekan安装与使用记录","text":"本文将记录笔者在部署和使用Wekan（作为个人看板）中遇到的一些问题和解决的方法。一来，方便以后笔者本人再次部署或者遇到同样的问题；再者，可以给打算使用Wekan但是又不知从何起手的人做一个参考。如果你的英文足够好，还是建议参考Wekan的文档。 本文将讲述如何将Wekan部署到服务器上，如果你想部署到树莓派上可以参考笔者的另一篇文章：将免费开源看板软件Wekan部署到树莓派4B 本文将结合笔者在实际使用中的经验介绍： Wekan的安装部署（Docker） Wekan模板的使用 Wekan规则的使用 Wekan 是啥？Wekan在GitHub上的介绍： Wekan is an completely Open Source and Free software collaborative kanban board application with MIT license. Whether you’re maintaining a personal todo list, planning your holidays with some friends, or working in a team on your next revolutionary idea, Kanban boards are an unbeatable tool to keep your things organized. They give you a visual overview of the current state of your project, and make you productive by allowing you to focus on the few items that matter the most. Since Wekan is a free software, you don’t have to trust us with your data and can install Wekan on your own computer or server. In fact we encourage you to do that by providing one-click installationde on various platforms. 简单地说，Wekan是一款遵循MIT协议完全开源的协作看板软件。它支持基于卡片的任务和待办事项管理，同时还允许多用户协同使用。你可以自由地将Wekan部署到你自己的计算机或者服务器（也可以部署在树莓派上哦~）然后使用它。官方Demo：链接。支持的平台：链接。Wekan的功能特性：链接。 安装&amp;初始化Docker （无自动更新） Keep backups, Docker is more complex than others above. Use only if you have time to test new release first, and it’s critical nothing gets broken. Because Docker does not have automatic updates, please keep behind firewall, without any ports open to Internet, because Wekan gets new security etc updates to Node.js and other dependencies often. 根据官方的提示，「仅在能经常测试新版的情况下使用」，因为「Docker没有自动更新」，而Wekan依赖的库可能经常需要安全更新。笔者目前是使用Docker来部署的，一开始用docker安装是觉得用docker部署只用改改配置文件,现在看来更麻烦,估计很快就会转移到snap。接下来，就来讲讲如何用Docker来部署Wekan吧。Wekan的Docker版安装文档:链接 安装环境 OS: Ubuntu 18.04 bionic Kernel: x86_64 Linux 4.15.0-99-generic 安装docker略… 下载docker-compose.yml如果你没有wget,先安装wget: 12sudo apt updatesudo apt install wget 接下来,用wget下载配置文件: 1wget https://raw.githubusercontent.com/wekan/wekan/master/docker-compose.yml 修改docker-compose.yml其实在docker-compose.yml里,对于每个对应的设置都有很想详尽的描述. 这里提一下几个重要的配置: ports 123456ports: # Docker outsideport:insideport. Do not add anything extra here. # For example, if you want to have wekan on port 3001, # use 3001:8080 . Do not add any extra address etc here, that way it does not work. # remove port mapping if you use nginx reverse proxy, port 8080 is already exposed to wekan-tier network - 80:8080 冒号前为外部端口，冒号后为内部端口，如果你想改变端口号，比如3001，那么只需要改成3001:8080即可 root_url 123456789101112131415environment: - MONGO_URL=mongodb://wekandb:27017/wekan #--------------------------------------------------------------- # ==== ROOT_URL SETTING ==== # Change ROOT_URL to your real Wekan URL, for example: # If you have Caddy/Nginx/Apache providing SSL # - https://example.com # - https://boards.example.com # This can be problematic with avatars https://github.com/wekan/wekan/issues/1776 # - https://example.com/wekan # If without https, can be only wekan node, no need for Caddy/Nginx/Apache if you don't need them # - http://example.com # - http://boards.example.com # - http://192.168.1.100 &lt;=== using at local LAN - ROOT_URL=http://localhost # &lt;=== using only at same laptop/desktop where Wekan is installed 如果只在本地使用那么就不用更改，ROOT_URL=http://localhost.例如使用默认设置，那么使用http://localhost就能访问Wekan。如果像上面的例子将端口改为了3001,那么就需要设置ROOT_URL=http://localhost:3001。如用要在外部访问或者通过域名访问，也是如此，以此类推。参考：链接 关于邮箱系统 参考：链接 由于笔者是将Wekan做个人看版使用，所以不需要邮箱系统。在配置文件中删掉或者注释掉MAIL_URL 和MAIL_FROM即可。 运行在docker-compose.yml所在的目录下： 前台运行 12docker-compose up #启动docker-compose stop #停止 后台运行（无输出） 1234docker-compose up -d #启动 下面两行为启动成功的提示Starting wekan-db ... doneRecreating wekan-app ... donedocker-compose stop #停止 启动完成后，用浏览器访问对应的网址即可。第一个注册的账号为管理员账号。可在“点击头像”-“选择挂管理面板”打开管理面板对Wekan进行设置。如果只做个人使用，建议勾选禁止自主注册。 Snap（有自动更新） Snap for Linux, install to your own server or laptop. Automatic Updates. Only Standalone Wekan. If on Snap Stable automatic update breaks something, report Wekan for Snap bugs and feature requests here, so it can be fixed on some automatic update. If security is critical, keep behind firewall, without any ports open to Internet. 那么就等笔者用snap再次部署的时候再更新吧… 模板的使用参看：链接 模板设置模板设置入口 卡片模板设置直接添加卡片即可 看板模板设置添加后点文件夹图标即可进入编辑状态。 模板示例接下分享一下笔者个人在用的模板 每月模板（看板模板） 建议在设计模板的时候就把标签和规则设置好： 注意当你使用模板时，如果用到了标签，需要你的看板里的标签和模板里的标签一致,标签才会显示。 规则自动记录开始时间 自动记录结束时间","link":"/2020/05/Wekan/"}],"tags":[{"name":"FireFox Devloper Edition","slug":"FireFox-Devloper-Edition","link":"/tags/FireFox-Devloper-Edition/"},{"name":"树莓派","slug":"树莓派","link":"/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"Catalina","slug":"Catalina","link":"/tags/Catalina/"},{"name":"Wekan","slug":"Wekan","link":"/tags/Wekan/"},{"name":"nodejs","slug":"nodejs","link":"/tags/nodejs/"}],"categories":[{"name":"解决方案","slug":"解决方案","link":"/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"name":"笔记","slug":"笔记","link":"/categories/%E7%AC%94%E8%AE%B0/"},{"name":"开源项目分享","slug":"开源项目分享","link":"/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%86%E4%BA%AB/"}]}